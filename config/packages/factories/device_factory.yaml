# Factory –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è device-specific –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–π (Open/Closed)
script:
  # –§–∞–±—Ä–∏–∫–∞ Apple —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  create_apple_device_automation:
    alias: "–°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é Apple —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
    fields:
      device_type:
        description: "–¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: iphone/watch/tv/macbook"
      device_entity:
        description: "Entity ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
      automation_type:
        description: "–¢–∏–ø –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: presence/battery/activity"
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ device_type == 'iphone' and automation_type == 'battery' }}"
            sequence:
              - condition: numeric_state
                entity_id: "{{ device_entity }}_battery_level"
                below: "{{ states('homeassistant.customize_glob.*threshold_constants*.low_battery') | int }}"
              - service: script.smart_set_temperature
                data:
                  mode: economy
          - conditions:
              - condition: template
                value_template: "{{ device_type == 'watch' and automation_type == 'activity' }}"
            sequence:
              - condition: numeric_state
                entity_id: "{{ device_entity }}_heart_rate"
                above: 100
              - condition: numeric_state
                entity_id: sensor.home_average_temperature
                above: 25
              - service: script.smart_set_temperature
                data:
                  mode: comfort

  # –§–∞–±—Ä–∏–∫–∞ Zigbee —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  create_zigbee_device_automation:
    alias: "–°–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é Zigbee —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
    fields:
      device_type:
        description: "–¢–∏–ø: sensor/switch/binary_sensor"
      device_entity:
        description: "Entity ID"
      automation_type:
        description: "battery/offline/reading"
    sequence:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ automation_type == 'battery' }}"
            sequence:
              - condition: numeric_state
                entity_id: "{{ device_entity }}_battery"
                below: "{{ states('homeassistant.customize_glob.*threshold_constants*.low_battery') | int }}"
              - service: script.send_climate_notification
                data:
                  title: "üîã –ù–∏–∑–∫–∏–π –∑–∞—Ä—è–¥"
                  message: "{{ state_attr(device_entity, 'friendly_name') }}: {{ states(device_entity + '_battery') }}%"
                  