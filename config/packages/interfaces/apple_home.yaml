# –ß–∏—Å—Ç—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è Apple Home (Interface Segregation)
automation:
  # –ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Apple Home —Ä–µ–∂–∏–º–æ–≤
  - alias: "Apple Home - Mode Handler"
    description: "–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∂–∏–º–æ–≤ Apple Home"
    trigger:
      - platform: state
        entity_id:
          - input_boolean.homekit_home_mode
          - input_boolean.homekit_sleep_mode
          - input_boolean.homekit_away_mode
          - input_boolean.homekit_guest_mode
        to: 'on'
    variables:
      triggered_mode: "{{ trigger.entity_id.split('.')[-1].replace('homekit_', '').replace('_mode', '') }}"
      mode_mapping:
        home: comfort
        sleep: night
        away: away
        guest: comfort
    action:
      # –í—ã–∫–ª—é—á–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∂–∏–º—ã (mutex logic)
      - service: homeassistant.turn_off
        target:
          entity_id:
            - input_boolean.homekit_home_mode
            - input_boolean.homekit_sleep_mode
            - input_boolean.homekit_away_mode
            - input_boolean.homekit_guest_mode
      # –í–∫–ª—é—á–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º
      - service: homeassistant.turn_on
        target:
          entity_id: "{{ trigger.entity_id }}"
      # –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º
      - service: script.smart_set_temperature
        data:
          mode: "{{ mode_mapping[triggered_mode] }}"

# Apple —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–æ—Ç–¥–µ–ª—å–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å)
automation:
  # iPhone –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
  - alias: "iPhone - Location Based Control"
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ iPhone"
    trigger:
      - platform: state
        entity_id: device_tracker.iphone_user1
        to: 'home'
      - platform: state
        entity_id: device_tracker.iphone_user1
        to: 'not_home'
        for: "00:15:00"
      - platform: zone
        entity_id: device_tracker.iphone_user1
        zone: zone.approaching_home
        event: enter
    variables:
      location_mode_map:
        home: comfort
        not_home: away
        approaching_home: comfort
      target_mode: "{{ location_mode_map.get(trigger.to_state.state, 'comfort') }}"
    action:
      - service: script.smart_set_temperature
        data:
          mode: "{{ target_mode }}"
      - service: notify.mobile_app_iphone_user1
        data:
          title: "üè† –£–º–Ω—ã–π –¥–æ–º"
          message: >
            {% if trigger.to_state.state == 'home' %}
              –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {{ states('sensor.home_average_temperature') }}¬∞C
            {% elif trigger.to_state.state == 'not_home' %}
              –î–æ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Ä–µ–∂–∏–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
            {% else %}
              –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–º –∫ –≤–∞—à–µ–º—É –ø—Ä–∏–µ–∑–¥—É
            {% endif %}
